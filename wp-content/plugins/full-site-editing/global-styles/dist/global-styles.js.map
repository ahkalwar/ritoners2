{"version":3,"file":"global-styles.js","mappings":"0EAMA,MAAMA,GAAa,IAAAC,eAAc,EAAAC,IAAK,CACpCC,MAAO,6BACPC,QAAS,cACR,IAAAH,eAAc,EAAAI,KAAM,CACrBC,EAAG,myBAEL,O,kBCZA;;;;;GAOC,WACA,aAEA,IAAIC,EAAS,GAAGC,eAEhB,SAASC,IAGR,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAC1C,IAAIG,EAAMF,UAAUD,GACpB,GAAKG,EAAL,CAEA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC3BL,EAAQM,KAAKF,QACP,GAAIG,MAAMC,QAAQJ,IACxB,GAAIA,EAAID,OAAQ,CACf,IAAIM,EAAQV,EAAWW,MAAM,KAAMN,GAC/BK,GACHT,EAAQM,KAAKG,SAGT,GAAgB,WAAZJ,EACV,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACrC,IAAK,IAAIG,KAAOV,EACXP,EAAOkB,KAAKX,EAAKU,IAAQV,EAAIU,IAChCd,EAAQM,KAAKQ,QAIfd,EAAQM,KAAKF,EAAIO,aAKpB,OAAOX,EAAQgB,KAAK,KAGgBC,EAAOC,SAC3CnB,EAAWoB,QAAUpB,EACrBkB,EAAOC,QAAUnB,QAKhB,KAFwB,EAAF,WACtB,OAAOA,GACP,QAFoB,OAEpB,aA9CH,I,mOCPO,MAAMqB,EAAY,YACZC,EAAoB,oBACpBC,EAAgB,gBAChBC,EAAwB,wBACxBC,EAAgB,gBAChBC,EAAe,eACfC,EAAY,Y,yECIzB,KAAiBC,EAASC,KACzBC,GAAAA,EAAU,KAET,MAAMC,EAAiB,GACvB,IAAIC,EAAkB,GACtB,MAAMC,EAAe,GACrBL,EAAQM,SAAWC,IAClBF,EAAcE,GAAY,KAAKA,EAAOC,QAAS,IAAK,UAGrD,IAAIC,EAAe,MACnBC,EAAAA,EAAAA,YAAW,KAQV,MAAMC,GAAgBC,EAAAA,EAAAA,QAAQ,eAAgBC,wBAC9C,GAAKF,IAAqC,IAApBA,IACrB,OAeD,GATOF,IACNA,EAAeK,SAASlD,cAAe,SACvCkD,SAASC,KAAKC,YAAaP,IAI5BT,EAAQM,SAAWC,IAClBJ,EAAgBI,GAAWN,EAAgBM,OAEvCU,EAAAA,EAAAA,SAASd,KAAoBe,EAAAA,EAAAA,SAASf,EAAgBC,GAC1D,OAEDA,EAAkB,IAAKD,GAIvB,IAAIgB,EAAkB,GACtBlC,OAAOmC,KAAMjB,GAAiBG,SAAWnB,IACxCgC,GAAoB,GAAGd,EAAclB,MAAWgB,EAAgBhB,SAEjEsB,EAAaY,YAAe,mDAAmDF,a,kHCnDlF,IAAe,IAAwD,IAAtD,aAAEG,EAAF,SAAgBC,EAAhB,aAA0BC,EAA1B,OAAwCC,GAAc,EACtE,OACC,oCACC,6BAAMC,GAAI,gBAAiB,sBACzBJ,GAAgBE,GAAgBD,GACjC,0BAAKI,UAAU,gCACd,0BAAKA,UAAU,uCACZL,EAAaM,KAAK,IAAiC,IAA/B,MAAEC,EAAF,SAASC,EAAT,KAAmBC,GAAY,EACpD,MAAMC,EAAaF,IAAaN,GAAgBO,IAASR,EACzD,OACC,mBAAC,EAAAU,OAAD,CACCN,UAAYO,GAAAA,CAAY,6BAA8B,CACrD,cAAeF,IAEhBG,QAAU,IAAMV,EAAQ,CAAEK,SAAAA,EAAUC,KAAAA,IACpCK,UAAcC,GACbA,EAAMC,UAAYC,EAAAA,MAAQd,EAAQ,CAAEK,SAAAA,EAAUC,KAAAA,IAAW,KAE1D5C,IAAM0C,IAEN,2BAAMF,UAAU,wCACf,2BAAMa,MAAQ,CAAEC,WAAYX,EAAUY,WAAY,MAAUZ,GAD7D,OAGC,2BAAMU,MAAQ,CAAEC,WAAYV,IAAWA,WAQ7C,mBAAC,IAAD,CAAWY,mBAAqBjB,GAAI,gBAAiB,0B,uFCjCzD,IAAe,IASR,IATU,SAChBH,EADgB,gBAEhBqB,EAFgB,aAGhBpB,EAHgB,oBAIhBqB,EAJgB,gBAKhBC,EALgB,oBAMhBC,EANgB,eAOhBC,EAPgB,mBAQhBC,GACM,EACN,OAAOH,GAAqBC,GAK3B,oCACC,mBAAC,EAAAG,cAAD,CACCrB,MAAQH,GAAI,eAAgB,qBAC5ByB,MAAQ3B,EACRxB,QAAU+C,EACVK,SAAaC,GAAcJ,EAAoBI,GAC/Cb,MAAQ,CAAEC,WAA6B,UAAjBjB,EAA2BA,EAAeqB,MAEjE,mBAAC,EAAAK,cAAD,CACCrB,MAAQH,GAAI,YAAa,qBACzByB,MAAQ5B,EACRvB,QAAU8C,EACVM,SAAaC,GAAcL,EAAgBK,GAC3Cb,MAAQ,CAAEC,WAAyB,UAAblB,EAAuBA,EAAWqB,MAEzD,gCAnBM,mBAAC,IAAD,CAAWD,mBAAqBjB,GAAI,wBAAyB,yB,4ICJhE4B,EAAe,eAKfC,EAAaC,IAClB,GAAqB,iBAATA,EAAoB,CAC/B,MAAM,MAAE3B,EAAF,MAASsB,EAAT,KAAgBM,EAAOH,GAAiBE,EAC9C,MAAO,CAAE3B,MAAAA,EAAOsB,MAAAA,EAAOM,KAAAA,GAExB,MAAO,CAAE5B,MAAO2B,EAAML,MAAOK,EAAMC,KAAMH,IAEpCI,EAAcnD,GAA6B,OAAjBA,EAAO4C,OAAmC,OAAjB5C,EAAOsB,MAE1D8B,EAAY,CAAE3D,EAAS4D,IAC1B5D,EAAeA,EAAQ4B,IAAK2B,GAAWM,OAAQH,GAAYG,OAb9CD,CAAAA,GAAsBrD,GACrCA,EAAOkD,OAASH,GAAgB/C,EAAOkD,OAASG,EAYqBE,CAAOF,IAAhE,GAEPG,EAAqB,QAAE,gBAC5BC,EAD4B,YAE5BC,EAF4B,cAG5BC,EAH4B,UAI5BvC,EAAY,MAJc,SAM1B,0BAAKA,UAAYA,IAChB,mBAAC,EAAAM,OAAD,CAAQkC,UAAaH,EAAkBI,WAAS,EAACjC,QAAU8B,GACxDvC,GAAI,QAAS,uBAEhB,mBAAC,EAAAO,OAAD,CACCN,UAAY,wCACZwC,UAAaH,EACbK,WAAS,EACTlC,QAAU+B,GAERxC,GAAI,UAAW,wBAYpB,IAAe,IAYR,IAZU,aAChBF,EADgB,oBAEhBqB,EAFgB,SAGhBtB,EAHgB,gBAIhBqB,EAJgB,aAKhBtB,EALgB,YAMhBgD,EANgB,SAOhBC,EAPgB,eAQhBC,EARgB,cAShBC,EATgB,gBAUhBT,EAVgB,kBAWhBU,GACM,GACNC,EAAAA,EAAAA,YAAW,KAlBN,mBADeC,EAAAA,EAAAA,aAAaC,OAAOC,SAASC,KAAM,iBAEtDC,EAAAA,EAAAA,UAAU,kBAAmBC,mBAAoB,yCAmB/C,IACH,MAAMC,EAAU,IACfV,EAAgB,CACf,CAAE/E,EAAAA,IAAa8B,EACf,CAAE5B,EAAAA,IAAiB6B,IAErB,OACC,oCACC,mBAAC,EAAA2D,0BAAD,CAA2BC,KAAOzH,EAAAA,EAAa0H,OAAO,iBACnD3D,GAAI,gBAAiB,uBAExB,mBAAC,EAAA4D,cAAD,CACCF,KAAOzH,EAAAA,EACP4H,KAAO,gBACPC,MAAQ9D,GAAI,gBAAiB,qBAC7BC,UAAU,0BAEV,mBAAC,EAAA8D,UAAD,MACC,6BAGEC,EAAAA,EAAAA,SAAShE,GAAI,0BAA2B,qBAAuB6C,KAGjE,4BACG7C,GACD,6DACA,sBAGAsC,GACD,+BACC,6BACC,6BAAMtC,GAAI,4BAA6B,wBAExC,mBAACqC,EAAD,CACCC,gBAAkBA,EAClBE,cAAgBgB,EAChBjB,YAAcS,KAGb,OAEL,mBAAC,EAAAe,UAAD,CAAWD,MAAQ9D,GAAI,iBAAkB,uBACxC,mBAAC,IAAD,CACCH,SAAWA,EACXqB,gBAAkBA,EAClBpB,aAAeA,EACfqB,oBAAsBA,EACtBC,gBAAkBa,EAAWW,EAAa7E,EAAAA,IAC1CsD,oBAAsBY,EAAWW,EAAa3E,EAAAA,IAC9CqD,eAAmBG,GAAWsB,EAAe,CAAE,CAAEhF,EAAAA,IAAa0D,IAC9DF,mBAAuBE,GAAWsB,EAAe,CAAE,CAAE9E,EAAAA,IAAiBwD,OAEvE,mBAAC,IAAD,CACC3B,aAAeA,EACfD,SAAWA,EACXD,aAAeA,EACfG,OAAS,QAAE,SAAEK,EAAF,KAAYC,GAAd,SACR0C,EAAe,CAAE,CAAE9E,EAAAA,IAAiBmC,EAAU,CAAErC,EAAAA,IAAasC,SAIhE,mBAAC,EAAA0D,UAAD,KACGzB,GACD,6BACC,6BAAMtC,GAAI,4BAA6B,uBAErC,MACJ,mBAACqC,EAAD,CACCC,gBAAkBA,EAClBE,cAAgBgB,EAChBjB,YAAcS,EACd/C,UAAY,qD,qEC9IlB,IAAe,QAAE,mBAAEgB,GAAJ,SACd,6BACG+C,EAAAA,EAAAA,SAEDhE,GAAI,wCAAyC,qBAC7CiB,M,gECJH,IAAIgD,EAAQ,GACRC,GAAwB,EAE5B,MAAMC,EAAU,CACf,gBAAiB7F,GAKhB,YAJM,CACL8F,KAAM,qBACN9F,QAAAA,GAEM,CACN8F,KAAM,kBACN9F,QAAAA,IAGFyE,cAAezE,IACP,CACN8F,KAAM,iBACN9F,QAAAA,IAGF+F,aAAY,KACJ,CACND,KAAM,qBAGRpB,kBAAiB,KACT,CACNoB,KAAM,gBACN9F,QAAS2F,KAsBZ,KAAiBK,EAAWC,MAC3BC,EAAAA,EAAAA,eAAeF,EAAW,CACzBG,QAASC,EAAOC,GACf,OAASA,EAAOP,MACf,IAAK,iBACL,IAAK,gBACL,IAAK,kBACJ,MAAO,IACHM,KACAC,EAAOrG,SAIb,OAAOoG,GAGRP,QAAAA,EAEAS,UAAW,CACVC,UAAS,CAAEH,EAAOjH,IACViH,EAAQA,EAAOjH,QAAQqH,EAE/BxC,gBAAiBoC,KACNA,GAASnH,OAAOmC,KAAMuE,GAAQc,MAAQtH,GAASwG,EAAOxG,KAAUiH,EAAOjH,MAInFuH,UAAW,CAEV,WAAYvH,GACX,GAAKyG,EACJ,OAGD,IAAI5F,EACJ,IACC4F,GAAwB,EACxB5F,QAAgB6F,EAAQE,eACvB,MAAQY,GACT3G,EAAU,GAGX,OADA2F,EAAQ3F,EACD,CACN8F,KAAM,iBACN9F,QAAAA,KAKH4G,SAAU,CACTC,iBAAgB,IACRC,GAAAA,CAAU,CAAEC,KAAMd,IAE1Be,mBAAmB,GAAe,IAAd,QAAEhH,GAAY,EAEjC,OADA2F,EAAQ3F,EACD8G,GAAAA,CAAU,CAChBC,KAAMd,EACNgB,OAAQ,OACRC,KAAM,IACFlH,W,6BChHTV,EAAOC,QAAUsF,OAAe,Q,6BCAhCvF,EAAOC,QAAUsF,OAAW,GAAY,U,6BCAxCvF,EAAOC,QAAUsF,OAAW,GAAc,Y,6BCA1CvF,EAAOC,QAAUsF,OAAW,GAAW,S,6BCAvCvF,EAAOC,QAAUsF,OAAW,GAAQ,M,6BCApCvF,EAAOC,QAAUsF,OAAW,GAAY,U,4BCAxCvF,EAAOC,QAAUsF,OAAW,GAAY,U,6BCAxCvF,EAAOC,QAAUsF,OAAW,GAAW,S,6BCAvCvF,EAAOC,QAAUsF,OAAW,GAAQ,M,6BCApCvF,EAAOC,QAAUsF,OAAW,GAAY,U,6BCAxCvF,EAAOC,QAAUsF,OAAW,GAAW,S,6BCAvCvF,EAAOC,QAAUsF,OAAW,GAAc,Y,6BCA1CvF,EAAOC,QAAUsF,OAAW,GAAO,MCC/BsC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBb,IAAjBc,EACH,OAAOA,EAAa/H,QAGrB,IAAID,EAAS6H,EAAyBE,GAAY,CAGjD9H,QAAS,IAOV,OAHAgI,EAAoBF,GAAU/H,EAAQA,EAAOC,QAAS6H,GAG/C9H,EAAOC,QCpBf6H,EAAoBI,EAAI,SAASlI,GAChC,IAAImI,EAASnI,GAAUA,EAAOoI,WAC7B,WAAa,OAAOpI,EAAgB,SACpC,WAAa,OAAOA,GAErB,OADA8H,EAAoBnJ,EAAEwJ,EAAQ,CAAEE,EAAGF,IAC5BA,GCLRL,EAAoBnJ,EAAI,SAASsB,EAASqI,GACzC,IAAI,IAAIzI,KAAOyI,EACXR,EAAoBS,EAAED,EAAYzI,KAASiI,EAAoBS,EAAEtI,EAASJ,IAC5EF,OAAO6I,eAAevI,EAASJ,EAAK,CAAE4I,YAAY,EAAMC,IAAKJ,EAAWzI,MCJ3EiI,EAAoBS,EAAI,SAASI,EAAKxE,GAAQ,OAAOxE,OAAOC,UAAUf,eAAeiB,KAAK6I,EAAKxE,ICC/F2D,EAAoBc,EAAI,SAAS3I,GACX,oBAAX4I,QAA0BA,OAAOC,aAC1CnJ,OAAO6I,eAAevI,EAAS4I,OAAOC,YAAa,CAAEjF,MAAO,WAE7DlE,OAAO6I,eAAevI,EAAS,aAAc,CAAE4D,OAAO,K,mHCevD,MAAM,YAAEkF,EAAF,WAAeC,EAAf,UAA2BC,GAAcC,wCAE/CtC,EAAAA,EAAAA,GAAeoC,EAAYC,IAC3BE,EAAAA,EAAAA,GAAoB,CAAEhJ,EAAAA,GAAWE,EAAAA,KAAiBiB,EAAAA,EAAAA,QAAQ0H,GAAa/B,YAEvEmC,EAAAA,EAAAA,gBAAgBL,EAAa,CAC5BM,QAAQC,EAAAA,EAAAA,UACPC,EAAAA,EAAAA,aAAcC,IAAF,CACXvE,SAAUuE,EAAcR,GAAa/B,UAAWxG,EAAAA,IAChDyB,aAAcsH,EAAcR,GAAa/B,UAAW5G,EAAAA,IACpDkD,oBAAqBiG,EAAcR,GAAa/B,UAAW3G,EAAAA,IAC3D2B,SAAUuH,EAAcR,GAAa/B,UAAW9G,EAAAA,IAChDmD,gBAAiBkG,EAAcR,GAAa/B,UAAW7G,EAAAA,IACvD4B,aAAcwH,EAAcR,GAAa/B,UAAW1G,EAAAA,IACpDyE,YAAawE,EAAcR,GAAa/B,UAAWzG,EAAAA,IACnDkE,gBAAiB8E,EAAcR,GAAatE,uBAE7C+E,EAAAA,EAAAA,eAAgB/D,IAAF,CACbP,cAAeO,EAAUsD,GAAa7D,cACtCD,eAAgBQ,EAAUsD,GAAa9D,eACvCE,kBAAmBM,EAAUsD,GAAa5D,sBAdpCkE,CAgBLI,EAAAA,K","sources":["webpack://EditingToolkit/../../node_modules/@wordpress/icons/build-module/library/typography.js","webpack://EditingToolkit/../../node_modules/classnames/index.js","webpack://EditingToolkit/./editing-toolkit-plugin/global-styles/src/constants.js","webpack://EditingToolkit/./editing-toolkit-plugin/global-styles/src/dom-updater.js","webpack://EditingToolkit/./editing-toolkit-plugin/global-styles/src/font-pairings-panel.js","webpack://EditingToolkit/./editing-toolkit-plugin/global-styles/src/font-selection-panel.js","webpack://EditingToolkit/./editing-toolkit-plugin/global-styles/src/global-styles-sidebar.js","webpack://EditingToolkit/./editing-toolkit-plugin/global-styles/src/no-support.js","webpack://EditingToolkit/./editing-toolkit-plugin/global-styles/src/store.js","webpack://EditingToolkit/external window \"lodash\"","webpack://EditingToolkit/external window [\"wp\",\"apiFetch\"]","webpack://EditingToolkit/external window [\"wp\",\"components\"]","webpack://EditingToolkit/external window [\"wp\",\"compose\"]","webpack://EditingToolkit/external window [\"wp\",\"data\"]","webpack://EditingToolkit/external window [\"wp\",\"domReady\"]","webpack://EditingToolkit/external window [\"wp\",\"editPost\"]","webpack://EditingToolkit/external window [\"wp\",\"element\"]","webpack://EditingToolkit/external window [\"wp\",\"i18n\"]","webpack://EditingToolkit/external window [\"wp\",\"keycodes\"]","webpack://EditingToolkit/external window [\"wp\",\"plugins\"]","webpack://EditingToolkit/external window [\"wp\",\"primitives\"]","webpack://EditingToolkit/external window [\"wp\",\"url\"]","webpack://EditingToolkit/webpack/bootstrap","webpack://EditingToolkit/webpack/runtime/compat get default export","webpack://EditingToolkit/webpack/runtime/define property getters","webpack://EditingToolkit/webpack/runtime/hasOwnProperty shorthand","webpack://EditingToolkit/webpack/runtime/make namespace object","webpack://EditingToolkit/./editing-toolkit-plugin/global-styles/index.js"],"sourcesContent":["import { createElement } from \"@wordpress/element\";\n\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst typography = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M6.9 7L3 17.8h1.7l1-2.8h4.1l1 2.8h1.7L8.6 7H6.9zm-.7 6.6l1.5-4.3 1.5 4.3h-3zM21.6 17c-.1.1-.2.2-.3.2-.1.1-.2.1-.4.1s-.3-.1-.4-.2c-.1-.1-.1-.3-.1-.6V12c0-.5 0-1-.1-1.4-.1-.4-.3-.7-.5-1-.2-.2-.5-.4-.9-.5-.4 0-.8-.1-1.3-.1s-1 .1-1.4.2c-.4.1-.7.3-1 .4-.2.2-.4.3-.6.5-.1.2-.2.4-.2.7 0 .3.1.5.2.8.2.2.4.3.8.3.3 0 .6-.1.8-.3.2-.2.3-.4.3-.7 0-.3-.1-.5-.2-.7-.2-.2-.4-.3-.6-.4.2-.2.4-.3.7-.4.3-.1.6-.1.8-.1.3 0 .6 0 .8.1.2.1.4.3.5.5.1.2.2.5.2.9v1.1c0 .3-.1.5-.3.6-.2.2-.5.3-.9.4-.3.1-.7.3-1.1.4-.4.1-.8.3-1.1.5-.3.2-.6.4-.8.7-.2.3-.3.7-.3 1.2 0 .6.2 1.1.5 1.4.3.4.9.5 1.6.5.5 0 1-.1 1.4-.3.4-.2.8-.6 1.1-1.1 0 .4.1.7.3 1 .2.3.6.4 1.2.4.4 0 .7-.1.9-.2.2-.1.5-.3.7-.4h-.3zm-3-.9c-.2.4-.5.7-.8.8-.3.2-.6.2-.8.2-.4 0-.6-.1-.9-.3-.2-.2-.3-.6-.3-1.1 0-.5.1-.9.3-1.2s.5-.5.8-.7c.3-.2.7-.3 1-.5.3-.1.6-.3.7-.6v3.4z\"\n}));\nexport default typography;\n//# sourceMappingURL=typography.js.map","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\n\t\t\t\t\tfor (var key in arg) {\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","export const FONT_BASE = 'font_base';\nexport const FONT_BASE_DEFAULT = 'font_base_default';\nexport const FONT_HEADINGS = 'font_headings';\nexport const FONT_HEADINGS_DEFAULT = 'font_headings_default';\nexport const FONT_PAIRINGS = 'font_pairings';\nexport const FONT_OPTIONS = 'font_options';\nexport const SITE_NAME = 'blogname';\n","import { subscribe, select } from '@wordpress/data';\nimport domReady from '@wordpress/dom-ready';\nimport { isEmpty, isEqual } from 'lodash';\n\n/**\n * DOM updater\n *\n * @param {string[]} options A list of option names to keep track of.\n * @param {Function} getOptionValue A function that given an option name as a string, returns the current option value.\n */\nexport default ( options, getOptionValue ) => {\n\tdomReady( () => {\n\t\t// Book-keeping.\n\t\tconst currentOptions = {};\n\t\tlet previousOptions = {};\n\t\tconst cssVariables = {};\n\t\toptions.forEach( ( option ) => {\n\t\t\tcssVariables[ option ] = `--${ option.replace( '_', '-' ) }`;\n\t\t} );\n\n\t\tlet styleElement = null;\n\t\tsubscribe( () => {\n\t\t\t/**\n\t\t\t * Do nothing until the editor is ready. This is required when\n\t\t\t * working in wpcom iframe environment to avoid running code before\n\t\t\t * everything has loaded, which can cause bugs like the following.\n\t\t\t *\n\t\t\t * @see https://github.com/Automattic/wp-calypso/pull/40690\n\t\t\t */\n\t\t\tconst isEditorReady = select( 'core/editor' ).__unstableIsEditorReady;\n\t\t\tif ( isEditorReady && isEditorReady() === false ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Create style element if it has not been created yet. Must happen\n\t\t\t// after the editor is ready or the style element will be appended\n\t\t\t// before the styles it needs to affect.\n\t\t\tif ( ! styleElement ) {\n\t\t\t\tstyleElement = document.createElement( 'style' );\n\t\t\t\tdocument.body.appendChild( styleElement );\n\t\t\t}\n\n\t\t\t// Maybe bail-out early.\n\t\t\toptions.forEach( ( option ) => {\n\t\t\t\tcurrentOptions[ option ] = getOptionValue( option );\n\t\t\t} );\n\t\t\tif ( isEmpty( currentOptions ) || isEqual( currentOptions, previousOptions ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpreviousOptions = { ...currentOptions };\n\n\t\t\t// Update style node. We need this to be a stylesheet rather than inline styles\n\t\t\t// so the styles apply to all editor instances incl. previews.\n\t\t\tlet declarationList = '';\n\t\t\tObject.keys( currentOptions ).forEach( ( key ) => {\n\t\t\t\tdeclarationList += `${ cssVariables[ key ] }:${ currentOptions[ key ] };`;\n\t\t\t} );\n\t\t\tstyleElement.textContent = `.edit-post-visual-editor .editor-styles-wrapper{${ declarationList }}`;\n\t\t} );\n\t} );\n};\n","import { Button } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport { ENTER } from '@wordpress/keycodes';\nimport classnames from 'classnames';\nimport NoSupport from './no-support';\n\nexport default ( { fontPairings, fontBase, fontHeadings, update } ) => {\n\treturn (\n\t\t<>\n\t\t\t<h3>{ __( 'Font Pairings', 'full-site-editing' ) }</h3>\n\t\t\t{ fontPairings && fontHeadings && fontBase ? (\n\t\t\t\t<div className=\"style-preview__font-options\">\n\t\t\t\t\t<div className=\"style-preview__font-options-desktop\">\n\t\t\t\t\t\t{ fontPairings.map( ( { label, headings, base } ) => {\n\t\t\t\t\t\t\tconst isSelected = headings === fontHeadings && base === fontBase;\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tclassName={ classnames( 'style-preview__font-option', {\n\t\t\t\t\t\t\t\t\t\t'is-selected': isSelected,\n\t\t\t\t\t\t\t\t\t} ) }\n\t\t\t\t\t\t\t\t\tonClick={ () => update( { headings, base } ) }\n\t\t\t\t\t\t\t\t\tonKeyDown={ ( event ) =>\n\t\t\t\t\t\t\t\t\t\tevent.keyCode === ENTER ? update( { headings, base } ) : null\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tkey={ label }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<span className=\"style-preview__font-option-contents\">\n\t\t\t\t\t\t\t\t\t\t<span style={ { fontFamily: headings, fontWeight: 700 } }>{ headings }</span>\n\t\t\t\t\t\t\t\t\t\t&nbsp;/&nbsp;\n\t\t\t\t\t\t\t\t\t\t<span style={ { fontFamily: base } }>{ base }</span>\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} ) }\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<NoSupport unsupportedFeature={ __( 'font pairings', 'full-site-editing' ) } />\n\t\t\t) }\n\t\t</>\n\t);\n};\n","import { SelectControl } from '@wordpress/components';\nimport { __ } from '@wordpress/i18n';\nimport NoSupport from './no-support';\n\nexport default ( {\n\tfontBase,\n\tfontBaseDefault,\n\tfontHeadings,\n\tfontHeadingsDefault,\n\tfontBaseOptions,\n\tfontHeadingsOptions,\n\tupdateBaseFont,\n\tupdateHeadingsFont,\n} ) => {\n\tif ( ! fontBaseOptions || ! fontHeadingsOptions ) {\n\t\treturn <NoSupport unsupportedFeature={ __( 'custom font selection', 'full-site-editing' ) } />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<SelectControl\n\t\t\t\tlabel={ __( 'Heading Font', 'full-site-editing' ) }\n\t\t\t\tvalue={ fontHeadings }\n\t\t\t\toptions={ fontHeadingsOptions }\n\t\t\t\tonChange={ ( newValue ) => updateHeadingsFont( newValue ) }\n\t\t\t\tstyle={ { fontFamily: fontHeadings !== 'unset' ? fontHeadings : fontHeadingsDefault } }\n\t\t\t/>\n\t\t\t<SelectControl\n\t\t\t\tlabel={ __( 'Base Font', 'full-site-editing' ) }\n\t\t\t\tvalue={ fontBase }\n\t\t\t\toptions={ fontBaseOptions }\n\t\t\t\tonChange={ ( newValue ) => updateBaseFont( newValue ) }\n\t\t\t\tstyle={ { fontFamily: fontBase !== 'unset' ? fontBase : fontBaseDefault } }\n\t\t\t/>\n\t\t\t<hr />\n\t\t</>\n\t);\n};\n","import { Button, PanelBody } from '@wordpress/components';\nimport { dispatch } from '@wordpress/data';\nimport { PluginSidebar, PluginSidebarMoreMenuItem } from '@wordpress/edit-post';\nimport { useEffect } from '@wordpress/element';\nimport { __, sprintf } from '@wordpress/i18n';\nimport { typography } from '@wordpress/icons';\nimport { getQueryArg } from '@wordpress/url';\nimport { FONT_BASE, FONT_HEADINGS } from './constants';\nimport FontPairingsPanel from './font-pairings-panel';\nimport FontSelectionPanel from './font-selection-panel';\n\nconst ANY_PROPERTY = 'ANY_PROPERTY';\n\nconst isFor = ( filterProperty ) => ( option ) =>\n\toption.prop === ANY_PROPERTY || option.prop === filterProperty;\n\nconst toOption = ( font ) => {\n\tif ( typeof font === 'object' ) {\n\t\tconst { label, value, prop = ANY_PROPERTY } = font;\n\t\treturn { label, value, prop };\n\t}\n\treturn { label: font, value: font, prop: ANY_PROPERTY };\n};\nconst isNotNull = ( option ) => option.value !== null && option.label !== null;\n\nconst toOptions = ( options, filterProperty ) =>\n\t! options ? [] : options.map( toOption ).filter( isNotNull ).filter( isFor( filterProperty ) );\n\nconst PanelActionButtons = ( {\n\thasLocalChanges,\n\tresetAction,\n\tpublishAction,\n\tclassName = null,\n} ) => (\n\t<div className={ className }>\n\t\t<Button disabled={ ! hasLocalChanges } isDefault onClick={ resetAction }>\n\t\t\t{ __( 'Reset', 'full-site-editing' ) }\n\t\t</Button>\n\t\t<Button\n\t\t\tclassName={ 'global-styles-sidebar__publish-button' }\n\t\t\tdisabled={ ! hasLocalChanges }\n\t\t\tisPrimary\n\t\t\tonClick={ publishAction }\n\t\t>\n\t\t\t{ __( 'Publish', 'full-site-editing' ) }\n\t\t</Button>\n\t</div>\n);\n\nfunction maybeOpenSidebar() {\n\tconst openSidebar = getQueryArg( window.location.href, 'openSidebar' );\n\tif ( 'global-styles' === openSidebar ) {\n\t\tdispatch( 'core/edit-post' ).openGeneralSidebar( 'jetpack-global-styles/global-styles' );\n\t}\n}\n\nexport default ( {\n\tfontHeadings,\n\tfontHeadingsDefault,\n\tfontBase,\n\tfontBaseDefault,\n\tfontPairings,\n\tfontOptions,\n\tsiteName,\n\tpublishOptions,\n\tupdateOptions,\n\thasLocalChanges,\n\tresetLocalChanges,\n} ) => {\n\tuseEffect( () => {\n\t\tmaybeOpenSidebar();\n\t}, [] );\n\tconst publish = () =>\n\t\tpublishOptions( {\n\t\t\t[ FONT_BASE ]: fontBase,\n\t\t\t[ FONT_HEADINGS ]: fontHeadings,\n\t\t} );\n\treturn (\n\t\t<>\n\t\t\t<PluginSidebarMoreMenuItem icon={ typography } target=\"global-styles\">\n\t\t\t\t{ __( 'Global Styles', 'full-site-editing' ) }\n\t\t\t</PluginSidebarMoreMenuItem>\n\t\t\t<PluginSidebar\n\t\t\t\ticon={ typography }\n\t\t\t\tname={ 'global-styles' }\n\t\t\t\ttitle={ __( 'Global Styles', 'full-site-editing' ) }\n\t\t\t\tclassName=\"global-styles-sidebar\"\n\t\t\t>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t/* translators: %s: Name of site. */\n\t\t\t\t\t\t\tsprintf( __( 'You are customizing %s.', 'full-site-editing' ), siteName )\n\t\t\t\t\t\t}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{ __(\n\t\t\t\t\t\t\t'Any change you make here will apply to the entire website.',\n\t\t\t\t\t\t\t'full-site-editing'\n\t\t\t\t\t\t) }\n\t\t\t\t\t</p>\n\t\t\t\t\t{ hasLocalChanges ? (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t<em>{ __( 'You have unsaved changes.', 'full-site-editing' ) }</em>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<PanelActionButtons\n\t\t\t\t\t\t\t\thasLocalChanges={ hasLocalChanges }\n\t\t\t\t\t\t\t\tpublishAction={ publish }\n\t\t\t\t\t\t\t\tresetAction={ resetLocalChanges }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : null }\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title={ __( 'Font Selection', 'full-site-editing' ) }>\n\t\t\t\t\t<FontSelectionPanel\n\t\t\t\t\t\tfontBase={ fontBase }\n\t\t\t\t\t\tfontBaseDefault={ fontBaseDefault }\n\t\t\t\t\t\tfontHeadings={ fontHeadings }\n\t\t\t\t\t\tfontHeadingsDefault={ fontHeadingsDefault }\n\t\t\t\t\t\tfontBaseOptions={ toOptions( fontOptions, FONT_BASE ) }\n\t\t\t\t\t\tfontHeadingsOptions={ toOptions( fontOptions, FONT_HEADINGS ) }\n\t\t\t\t\t\tupdateBaseFont={ ( value ) => updateOptions( { [ FONT_BASE ]: value } ) }\n\t\t\t\t\t\tupdateHeadingsFont={ ( value ) => updateOptions( { [ FONT_HEADINGS ]: value } ) }\n\t\t\t\t\t/>\n\t\t\t\t\t<FontPairingsPanel\n\t\t\t\t\t\tfontHeadings={ fontHeadings }\n\t\t\t\t\t\tfontBase={ fontBase }\n\t\t\t\t\t\tfontPairings={ fontPairings }\n\t\t\t\t\t\tupdate={ ( { headings, base } ) =>\n\t\t\t\t\t\t\tupdateOptions( { [ FONT_HEADINGS ]: headings, [ FONT_BASE ]: base } )\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody>\n\t\t\t\t\t{ hasLocalChanges ? (\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<em>{ __( 'You have unsaved changes.', 'full-site-editing' ) }</em>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t) : null }\n\t\t\t\t\t<PanelActionButtons\n\t\t\t\t\t\thasLocalChanges={ hasLocalChanges }\n\t\t\t\t\t\tpublishAction={ publish }\n\t\t\t\t\t\tresetAction={ resetLocalChanges }\n\t\t\t\t\t\tclassName={ 'global-styles-sidebar__panel-action-buttons' }\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</PluginSidebar>\n\t\t</>\n\t);\n};\n","import { __, sprintf } from '@wordpress/i18n';\n\nexport default ( { unsupportedFeature } ) => (\n\t<p>\n\t\t{ sprintf(\n\t\t\t/* translators: %s: feature name (i.e. font pairings, etc) */\n\t\t\t__( \"Your active theme doesn't support %s.\", 'full-site-editing' ),\n\t\t\tunsupportedFeature\n\t\t) }\n\t</p>\n);\n","import apiFetch from '@wordpress/api-fetch';\nimport { registerStore } from '@wordpress/data';\n\nlet cache = {};\nlet alreadyFetchedOptions = false;\n\nconst actions = {\n\t*publishOptions( options ) {\n\t\tyield {\n\t\t\ttype: 'IO_PUBLISH_OPTIONS',\n\t\t\toptions,\n\t\t};\n\t\treturn {\n\t\t\ttype: 'PUBLISH_OPTIONS',\n\t\t\toptions,\n\t\t};\n\t},\n\tupdateOptions( options ) {\n\t\treturn {\n\t\t\ttype: 'UPDATE_OPTIONS',\n\t\t\toptions,\n\t\t};\n\t},\n\tfetchOptions() {\n\t\treturn {\n\t\t\ttype: 'IO_FETCH_OPTIONS',\n\t\t};\n\t},\n\tresetLocalChanges() {\n\t\treturn {\n\t\t\ttype: 'RESET_OPTIONS',\n\t\t\toptions: cache,\n\t\t};\n\t},\n};\n\n/**\n * Store API\n *\n * Selectors under `wp.data.select( STORE_NAME )`:\n *\n * - getOption( String optionName )\n * - hasLocalChanges()\n *\n * Actions under `wp.data.dispatch( STORE_NAME )`:\n *\n * - updateOptions( Object optionsToUpdate )\n * - publishOptions( Object optionsToUpdate )\n * - resetLocalChanges()\n *\n * @param {string} storeName Name of the store.\n * @param {string} optionsPath REST path used to interact with the options API.\n */\nexport default ( storeName, optionsPath ) => {\n\tregisterStore( storeName, {\n\t\treducer( state, action ) {\n\t\t\tswitch ( action.type ) {\n\t\t\t\tcase 'UPDATE_OPTIONS':\n\t\t\t\tcase 'RESET_OPTIONS':\n\t\t\t\tcase 'PUBLISH_OPTIONS':\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...state,\n\t\t\t\t\t\t...action.options,\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn state;\n\t\t},\n\n\t\tactions,\n\n\t\tselectors: {\n\t\t\tgetOption( state, key ) {\n\t\t\t\treturn state ? state[ key ] : undefined;\n\t\t\t},\n\t\t\thasLocalChanges( state ) {\n\t\t\t\treturn !! state && Object.keys( cache ).some( ( key ) => cache[ key ] !== state[ key ] );\n\t\t\t},\n\t\t},\n\n\t\tresolvers: {\n\t\t\t// eslint-disable-next-line no-unused-vars\n\t\t\t*getOption( key ) {\n\t\t\t\tif ( alreadyFetchedOptions ) {\n\t\t\t\t\treturn; // do nothing\n\t\t\t\t}\n\n\t\t\t\tlet options;\n\t\t\t\ttry {\n\t\t\t\t\talreadyFetchedOptions = true;\n\t\t\t\t\toptions = yield actions.fetchOptions();\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\toptions = {};\n\t\t\t\t}\n\t\t\t\tcache = options;\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'UPDATE_OPTIONS',\n\t\t\t\t\toptions,\n\t\t\t\t};\n\t\t\t},\n\t\t},\n\n\t\tcontrols: {\n\t\t\tIO_FETCH_OPTIONS() {\n\t\t\t\treturn apiFetch( { path: optionsPath } );\n\t\t\t},\n\t\t\tIO_PUBLISH_OPTIONS( { options } ) {\n\t\t\t\tcache = options; // optimistically update the cache\n\t\t\t\treturn apiFetch( {\n\t\t\t\t\tpath: optionsPath,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t},\n\t\t\t\t} );\n\t\t\t},\n\t\t},\n\t} );\n};\n","module.exports = window[\"lodash\"];","module.exports = window[\"wp\"][\"apiFetch\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"domReady\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","module.exports = window[\"wp\"][\"keycodes\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"wp\"][\"url\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { compose } from '@wordpress/compose';\nimport { withDispatch, withSelect, select } from '@wordpress/data';\nimport { registerPlugin } from '@wordpress/plugins';\nimport {\n\tFONT_BASE,\n\tFONT_BASE_DEFAULT,\n\tFONT_HEADINGS,\n\tFONT_HEADINGS_DEFAULT,\n\tFONT_PAIRINGS,\n\tFONT_OPTIONS,\n\tSITE_NAME,\n} from './src/constants';\nimport registerDOMUpdater from './src/dom-updater';\nimport GlobalStylesSidebar from './src/global-styles-sidebar';\nimport registerStore from './src/store';\n\n// Tell Webpack to compile this into CSS\nimport './editor.scss';\n\n// Global variable.\nconst { PLUGIN_NAME, STORE_NAME, REST_PATH } = JETPACK_GLOBAL_STYLES_EDITOR_CONSTANTS; // eslint-disable-line no-undef\n\nregisterStore( STORE_NAME, REST_PATH );\nregisterDOMUpdater( [ FONT_BASE, FONT_HEADINGS ], select( STORE_NAME ).getOption );\n\nregisterPlugin( PLUGIN_NAME, {\n\trender: compose(\n\t\twithSelect( ( getSelectors ) => ( {\n\t\t\tsiteName: getSelectors( STORE_NAME ).getOption( SITE_NAME ),\n\t\t\tfontHeadings: getSelectors( STORE_NAME ).getOption( FONT_HEADINGS ),\n\t\t\tfontHeadingsDefault: getSelectors( STORE_NAME ).getOption( FONT_HEADINGS_DEFAULT ),\n\t\t\tfontBase: getSelectors( STORE_NAME ).getOption( FONT_BASE ),\n\t\t\tfontBaseDefault: getSelectors( STORE_NAME ).getOption( FONT_BASE_DEFAULT ),\n\t\t\tfontPairings: getSelectors( STORE_NAME ).getOption( FONT_PAIRINGS ),\n\t\t\tfontOptions: getSelectors( STORE_NAME ).getOption( FONT_OPTIONS ),\n\t\t\thasLocalChanges: getSelectors( STORE_NAME ).hasLocalChanges(),\n\t\t} ) ),\n\t\twithDispatch( ( dispatch ) => ( {\n\t\t\tupdateOptions: dispatch( STORE_NAME ).updateOptions,\n\t\t\tpublishOptions: dispatch( STORE_NAME ).publishOptions,\n\t\t\tresetLocalChanges: dispatch( STORE_NAME ).resetLocalChanges,\n\t\t} ) )\n\t)( GlobalStylesSidebar ),\n} );\n"],"names":["typography","createElement","SVG","xmlns","viewBox","Path","d","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","key","call","join","module","exports","default","FONT_BASE","FONT_BASE_DEFAULT","FONT_HEADINGS","FONT_HEADINGS_DEFAULT","FONT_PAIRINGS","FONT_OPTIONS","SITE_NAME","options","getOptionValue","domReady","currentOptions","previousOptions","cssVariables","forEach","option","replace","styleElement","subscribe","isEditorReady","select","__unstableIsEditorReady","document","body","appendChild","isEmpty","isEqual","declarationList","keys","textContent","fontPairings","fontBase","fontHeadings","update","__","className","map","label","headings","base","isSelected","Button","classnames","onClick","onKeyDown","event","keyCode","ENTER","style","fontFamily","fontWeight","unsupportedFeature","fontBaseDefault","fontHeadingsDefault","fontBaseOptions","fontHeadingsOptions","updateBaseFont","updateHeadingsFont","SelectControl","value","onChange","newValue","ANY_PROPERTY","toOption","font","prop","isNotNull","toOptions","filterProperty","filter","isFor","PanelActionButtons","hasLocalChanges","resetAction","publishAction","disabled","isDefault","isPrimary","fontOptions","siteName","publishOptions","updateOptions","resetLocalChanges","useEffect","getQueryArg","window","location","href","dispatch","openGeneralSidebar","publish","PluginSidebarMoreMenuItem","icon","target","PluginSidebar","name","title","PanelBody","sprintf","cache","alreadyFetchedOptions","actions","type","fetchOptions","storeName","optionsPath","registerStore","reducer","state","action","selectors","getOption","undefined","some","resolvers","error","controls","IO_FETCH_OPTIONS","apiFetch","path","IO_PUBLISH_OPTIONS","method","data","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","n","getter","__esModule","a","definition","o","defineProperty","enumerable","get","obj","r","Symbol","toStringTag","PLUGIN_NAME","STORE_NAME","REST_PATH","JETPACK_GLOBAL_STYLES_EDITOR_CONSTANTS","registerDOMUpdater","registerPlugin","render","compose","withSelect","getSelectors","withDispatch","GlobalStylesSidebar"],"sourceRoot":""}