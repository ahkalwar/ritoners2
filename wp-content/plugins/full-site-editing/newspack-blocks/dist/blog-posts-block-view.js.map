{"version":3,"file":"blog-posts-block-view.js","mappings":"6EA0HA,SAASA,EAAgBC,EAASC,GACjC,MAAMC,EAAM,IAAIC,eAEhBD,EAAIE,mBAAqB,KAExB,GAAwB,IAAnBF,EAAIG,WAAT,CAKA,GAAKH,EAAII,QAAU,KAAOJ,EAAII,OAAS,IAAM,CAC5C,MAAMC,EAAOC,KAAKC,MAAOP,EAAIQ,cAE7B,OAAOV,EAAQW,UAAWJ,GAI3B,OAAON,EAKAF,EAAgBC,EAASC,EAAI,GAJ5BD,EAAQY,YAOjBV,EAAIW,KAAM,MAAOb,EAAQc,KACzBZ,EAAIa,OA2DL,SAASC,EAAYC,EAAKC,GACzB,OAAOC,OAAOC,UAAUC,eAAeC,KAAML,EAAKC,GA7LnDK,MAAMH,UAAUI,QAAQF,KACvBG,SAASC,iBAAkB,gEAW5B,SAA+BC,GAC9B,MAAMC,EAAQD,EAAeE,cAAe,eAC5C,IAAOD,EACN,OAED,MAAME,EAAmBH,EAAeE,cAAe,gBAGvD,IAAIE,GAAa,EACbC,GAAc,EAElBJ,EAAMK,iBAAkB,SAAS,KAEhC,GAAKF,GAAcC,EAClB,OAAO,EAGRD,GAAa,EAEbJ,EAAeO,UAAUC,OAAQ,YACjCR,EAAeO,UAAUE,IAAK,cAyC9B,SAASxB,IACRmB,GAAa,EAEbJ,EAAeO,UAAUC,OAAQ,cACjCR,EAAeO,UAAUE,IAAK,YAvC/BrC,EAAgB,CAAEe,IAFjBc,EAAMS,aAAc,aAAgB,gBAiDvC,WACC,MAAMC,EAAUb,SAASC,iBAAkB,sDACrCa,EAAUhB,MAAMiB,KAAMF,GAAUG,KAAKC,GAAMA,EAAGL,aAAc,kBAMlE,OAJAE,EAAQI,KACPlB,SAASI,cAAe,6BAA8BQ,aAAc,yBAG9D,IAAK,IAAIO,IAAKL,IAzDmCM,GAAsBC,KAAM,KAEhDnC,UAKnC,SAAoBJ,GAEnB,IAkHH,SAA2BA,GAC1B,IAAIwC,GAAU,EAGbxC,GACAS,EAAYT,EAAM,UAClBgB,MAAMyB,QAASzC,EAAK0C,QACpBjC,EAAYT,EAAM,SACG,iBAAdA,EAAK2C,OAEZH,GAAU,GAGTxC,EAAK0C,MAAME,QACPnC,EAAYT,EAAK0C,MAAO,GAAK,SAA4C,iBAAzB1C,EAAK0C,MAAO,GAAIG,OAEpEL,GAAU,IAIZ,OAAOA,EAtIEM,CAAkB9C,GACxB,OAAOK,IAGR,GAAKL,EAAK0C,MAAME,OAAS,CAExB,MAAMG,EAAY/C,EAAK0C,MAAMR,KAAKc,GAAQA,EAAKH,OAAON,KAAM,IAC5DhB,EAAiB0B,mBAAoB,YAAaF,GAG9C/C,EAAK2C,MAETtB,EAAM6B,aAAc,YAAalD,EAAK2C,MAGhC3C,EAAK0C,MAAME,QAAY5C,EAAK2C,OAClClB,GAAc,EACdL,EAAeO,UAAUC,OAAQ,oBAGlCJ,GAAa,EAEbJ,EAAeO,UAAUC,OAAQ,eA7BYvB,QAAAA,GA/CxB,WCTpB8C,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaE,QAGrB,IAAIC,EAASN,EAAyBE,GAAY,CAGjDG,QAAS,IAOV,OAHAE,EAAoBL,GAAUI,EAAQA,EAAOD,QAASJ,GAG/CK,EAAOD,QCpBfJ,EAAoBO,EAAI,SAASH,GACX,oBAAXI,QAA0BA,OAAOC,aAC1CjD,OAAOkD,eAAeN,EAASI,OAAOC,YAAa,CAAEE,MAAO,WAE7DnD,OAAOkD,eAAeN,EAAS,aAAc,CAAEO,OAAO,K","sources":["webpack://EditingToolkit/./editing-toolkit-plugin/newspack-blocks/synced-newspack-blocks/blocks/homepage-articles/view.js","webpack://EditingToolkit/webpack/bootstrap","webpack://EditingToolkit/webpack/runtime/make namespace object"],"sourcesContent":["/**\n * VIEW\n * JavaScript used on front of site.\n */\n\n/**\n * Style dependencies\n */\nimport './view.scss';\n\nconst fetchRetryCount = 3;\n\n/**\n * Load More Button Handling\n *\n * Calls Array.prototype.forEach for IE11 compatibility.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/NodeList\n */\nArray.prototype.forEach.call(\n\tdocument.querySelectorAll( '.wp-block-newspack-blocks-homepage-articles.has-more-button' ),\n\tbuildLoadMoreHandler\n);\n\n/**\n * Builds a function to handle clicks on the load more button.\n * Creates internal state via closure to ensure all state is\n * isolated to a single Block + button instance.\n *\n * @param {HTMLElement} blockWrapperEl the button that was clicked\n */\nfunction buildLoadMoreHandler( blockWrapperEl ) {\n\tconst btnEl = blockWrapperEl.querySelector( '[data-next]' );\n\tif ( ! btnEl ) {\n\t\treturn;\n\t}\n\tconst postsContainerEl = blockWrapperEl.querySelector( '[data-posts]' );\n\n\t// Set initial state flags.\n\tlet isFetching = false;\n\tlet isEndOfData = false;\n\n\tbtnEl.addEventListener( 'click', () => {\n\t\t// Early return if still fetching or no more posts to render.\n\t\tif ( isFetching || isEndOfData ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tisFetching = true;\n\n\t\tblockWrapperEl.classList.remove( 'is-error' );\n\t\tblockWrapperEl.classList.add( 'is-loading' );\n\n\t\t// Set currently rendered posts' IDs as a query param (e.g. exclude_ids=1,2,3)\n\t\tconst requestURL =\n\t\t\tbtnEl.getAttribute( 'data-next' ) + '&exclude_ids=' + getRenderedPostsIds().join( ',' );\n\n\t\tfetchWithRetry( { url: requestURL, onSuccess, onError }, fetchRetryCount );\n\n\t\t/**\n\t\t * @param {Object} data Post data\n\t\t */\n\t\tfunction onSuccess( data ) {\n\t\t\t// Validate received data.\n\t\t\tif ( ! isPostsDataValid( data ) ) {\n\t\t\t\treturn onError();\n\t\t\t}\n\n\t\t\tif ( data.items.length ) {\n\t\t\t\t// Render posts' HTML from string.\n\t\t\t\tconst postsHTML = data.items.map( item => item.html ).join( '' );\n\t\t\t\tpostsContainerEl.insertAdjacentHTML( 'beforeend', postsHTML );\n\t\t\t}\n\n\t\t\tif ( data.next ) {\n\t\t\t\t// Save next URL as button's attribute.\n\t\t\t\tbtnEl.setAttribute( 'data-next', data.next );\n\t\t\t}\n\n\t\t\tif ( ! data.items.length || ! data.next ) {\n\t\t\t\tisEndOfData = true;\n\t\t\t\tblockWrapperEl.classList.remove( 'has-more-button' );\n\t\t\t}\n\n\t\t\tisFetching = false;\n\n\t\t\tblockWrapperEl.classList.remove( 'is-loading' );\n\t\t}\n\n\t\t/**\n\t\t * Handle fetching error\n\t\t */\n\t\tfunction onError() {\n\t\t\tisFetching = false;\n\n\t\t\tblockWrapperEl.classList.remove( 'is-loading' );\n\t\t\tblockWrapperEl.classList.add( 'is-error' );\n\t\t}\n\t} );\n}\n\n/**\n * Returns unique IDs for posts that are currently in the DOM.\n */\nfunction getRenderedPostsIds() {\n\tconst postEls = document.querySelectorAll( \"[class^='wp-block-newspack-blocks'] [data-post-id]\" );\n\tconst postIds = Array.from( postEls ).map( el => el.getAttribute( 'data-post-id' ) );\n\n\tpostIds.push(\n\t\tdocument.querySelector( 'div[data-current-post-id]' ).getAttribute( 'data-current-post-id' )\n\t);\n\n\treturn [ ...new Set( postIds ) ]; // Make values unique with Set\n}\n\n/**\n * Wrapper for XMLHttpRequest that performs given number of retries when error\n * occurs.\n *\n * @param {Object} options XMLHttpRequest options\n * @param {number} n       retry count before throwing\n */\nfunction fetchWithRetry( options, n ) {\n\tconst xhr = new XMLHttpRequest();\n\n\txhr.onreadystatechange = () => {\n\t\t// Return if the request is completed.\n\t\tif ( xhr.readyState !== 4 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Call onSuccess with parsed JSON if the request is successful.\n\t\tif ( xhr.status >= 200 && xhr.status < 300 ) {\n\t\t\tconst data = JSON.parse( xhr.responseText );\n\n\t\t\treturn options.onSuccess( data );\n\t\t}\n\n\t\t// Call onError if the request has failed n + 1 times (or if n is undefined).\n\t\tif ( ! n ) {\n\t\t\treturn options.onError();\n\t\t}\n\n\t\t// Retry fetching if request has failed and n > 0.\n\t\treturn fetchWithRetry( options, n - 1 );\n\t};\n\n\txhr.open( 'GET', options.url );\n\txhr.send();\n}\n\n/**\n * Validates the \"Load more\" posts endpoint schema:\n * {\n * \t\"type\": \"object\",\n * \t\"properties\": {\n * \t\t\"items\": {\n * \t\t\t\"type\": \"array\",\n * \t\t\t\"items\": {\n * \t\t\t\t\"type\": \"object\",\n * \t\t\t\t\"properties\": {\n * \t\t\t\t\t\"html\": {\n * \t\t\t\t\t\t\"type\": \"string\"\n * \t\t\t\t\t}\n * \t\t\t\t},\n * \t\t\t\t\"required\": [\"html\"]\n * \t\t\t},\n * \t\t\t\"required\": [\"items\"]\n * \t\t},\n * \t\t\"next\": {\n * \t\t\t\"type\": [\"string\", \"null\"]\n * \t\t}\n * \t},\n * \t\"required\": [\"items\", \"next\"]\n * }\n *\n * @param {Object} data posts endpoint payload\n */\nfunction isPostsDataValid( data ) {\n\tlet isValid = false;\n\n\tif (\n\t\tdata &&\n\t\thasOwnProp( data, 'items' ) &&\n\t\tArray.isArray( data.items ) &&\n\t\thasOwnProp( data, 'next' ) &&\n\t\ttypeof data.next === 'string'\n\t) {\n\t\tisValid = true;\n\n\t\tif (\n\t\t\tdata.items.length &&\n\t\t\t! ( hasOwnProp( data.items[ 0 ], 'html' ) && typeof data.items[ 0 ].html === 'string' )\n\t\t) {\n\t\t\tisValid = false;\n\t\t}\n\t}\n\n\treturn isValid;\n}\n\n/**\n * Checks if object has own property.\n *\n * @param {Object} obj  Object\n * @param {string} prop Property to check\n */\nfunction hasOwnProp( obj, prop ) {\n\treturn Object.prototype.hasOwnProperty.call( obj, prop );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"names":["fetchWithRetry","options","n","xhr","XMLHttpRequest","onreadystatechange","readyState","status","data","JSON","parse","responseText","onSuccess","onError","open","url","send","hasOwnProp","obj","prop","Object","prototype","hasOwnProperty","call","Array","forEach","document","querySelectorAll","blockWrapperEl","btnEl","querySelector","postsContainerEl","isFetching","isEndOfData","addEventListener","classList","remove","add","getAttribute","postEls","postIds","from","map","el","push","Set","getRenderedPostsIds","join","isValid","isArray","items","next","length","html","isPostsDataValid","postsHTML","item","insertAdjacentHTML","setAttribute","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","r","Symbol","toStringTag","defineProperty","value"],"sourceRoot":""}